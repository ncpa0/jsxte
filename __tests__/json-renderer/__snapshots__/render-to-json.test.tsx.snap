// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`renderToJson > ErrorBoundary > should correctly render the tree that's inside an ErrorBoundary 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            {
              "attributes": [
                [
                  "charset",
                  "utf-8",
                ],
              ],
              "children": [],
              "element": "meta",
            },
            {
              "attributes": [
                [
                  "http-equiv",
                  "x-ua-compatible",
                ],
                [
                  "content",
                  "IE=edge",
                ],
              ],
              "children": [],
              "element": "meta",
            },
            {
              "attributes": [],
              "children": [
                "Page Title",
              ],
              "element": "title",
            },
            {
              "attributes": [
                [
                  "name",
                  "viewport",
                ],
                [
                  "content",
                  "width=device-width, initial-scale=1",
                ],
              ],
              "children": [],
              "element": "meta",
            },
            {
              "attributes": [
                [
                  "rel",
                  "stylesheet",
                ],
                [
                  "type",
                  "text/css",
                ],
                [
                  "media",
                  "screen",
                ],
                [
                  "href",
                  "main.css",
                ],
              ],
              "children": [],
              "element": "link",
            },
          ],
          "element": "head",
        },
        {
          "attributes": [],
          "children": [
            {
              "attributes": [
                [
                  "class",
                  "main-container",
                ],
              ],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    {
                      "attributes": [],
                      "children": [
                        "Hello World!",
                      ],
                      "element": "h2",
                    },
                    {
                      "attributes": [
                        [
                          "value",
                          "write here",
                        ],
                      ],
                      "children": [],
                      "element": "input",
                    },
                    {
                      "attributes": [
                        [
                          "style",
                          undefined,
                        ],
                      ],
                      "children": [
                        "Submit",
                      ],
                      "element": "button",
                    },
                  ],
                  "element": "",
                },
              ],
              "element": "div",
            },
          ],
          "element": "body",
        },
      ],
      "element": "html",
    },
  ],
  "element": "",
}
`;

exports[`renderToJson > ErrorBoundary > should render the fallback if a nested async child throws an error 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        "Async test:",
      ],
      "element": "span",
    },
    {
      "attributes": [],
      "children": [
        "Oops. Something went wrong.",
      ],
      "element": "h1",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > ErrorBoundary > should render the fallback if a nested child throws an error 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        "Oops. Something went wrong.",
      ],
      "element": "h1",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > ErrorBoundary > should render the fallback if the direct child throws an error 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            "Oops. Something went wrong.",
          ],
          "element": "h1",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > errors > error throw should contain information on which place in the tree the error occurred > scenario 1 1`] = `
[JsxteRenderError: The below error has occurred in:
<html>
<body>
<div>
<Failing>

Rendering has failed due to an error: I'm failing]
`;

exports[`renderToJson > errors > error throw should contain information on which place in the tree the error occurred > scenario 2 1`] = `
[JsxteRenderError: The below error has occurred in:
<Main>
<html>
<body>
<div>
<Failing>

Rendering has failed due to an error: I'm failing]
`;

exports[`renderToJson > errors > error throw should contain information on which place in the tree the error occurred > scenario 3 1`] = `
[JsxteRenderError: The below error has occurred in:
<Main>
<Html>
<html>
<body>
<div>
<Wrapper>
<div>
<FailsEventually>
<span>
<Failing>

Rendering has failed due to an error: I'm failing]
`;

exports[`renderToJson > errors > error throw should contain information on which place in the tree the error occurred > scenario 4 1`] = `
[JsxteRenderError: The below error has occurred in:
<Main>
<Html>
<html>
<body>
<div>
<Wrapper>
<div>
<FailsEventually>
<span>
<Failing2>

Rendering has failed due to an error: I'm failing async]
`;

exports[`renderToJson > errors > error throw should contain information on which place in the tree the error occurred > scenario 5 1`] = `
[JsxteRenderError: The below error has occurred in:
<Main>
<Html>
<html>
<body>
<div>
<Wrapper>
<div>
<FailsEventually>
<span>
<Failing2>

Rendering has failed due to an error: I'm failing async]
`;

exports[`renderToJson > should correctly generate html from component base jsx structure 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "charset",
              "utf-8",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "http-equiv",
              "x-ua-compatible",
            ],
            [
              "content",
              "IE=edge",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [],
          "children": [
            "Page Title",
          ],
          "element": "title",
        },
        {
          "attributes": [
            [
              "name",
              "viewport",
            ],
            [
              "content",
              "width=device-width, initial-scale=1",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "rel",
              "stylesheet",
            ],
            [
              "type",
              "text/css",
            ],
            [
              "media",
              "screen",
            ],
            [
              "href",
              "main.css",
            ],
          ],
          "children": [],
          "element": "link",
        },
      ],
      "element": "head",
    },
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "class",
              "main-container",
            ],
          ],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "Hello World!",
                  ],
                  "element": "h2",
                },
                {
                  "attributes": [
                    [
                      "value",
                      "write here",
                    ],
                  ],
                  "children": [],
                  "element": "input",
                },
                {
                  "attributes": [
                    [
                      "style",
                      undefined,
                    ],
                  ],
                  "children": [
                    "Submit",
                  ],
                  "element": "button",
                },
              ],
              "element": "",
            },
          ],
          "element": "div",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should correctly generate html from simple jsx 1`] = `
{
  "attributes": [
    [
      "id",
      "container",
    ],
    [
      "class",
      "bordered active",
    ],
  ],
  "children": [
    {
      "attributes": [],
      "children": [
        "Hello World",
      ],
      "element": "h1",
    },
    {
      "attributes": [],
      "children": [
        "Prop Title",
      ],
      "element": "h2",
    },
    {
      "attributes": [
        [
          "onclick",
          "console.log("Hello World!")",
        ],
      ],
      "children": [
        "Click me!",
      ],
      "element": "button",
    },
    {
      "attributes": [
        [
          "autofocus",
          true,
        ],
        [
          "disabled",
          false,
        ],
        [
          "draggable",
          true,
        ],
      ],
      "children": [],
      "element": "input",
    },
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly handle component children of type nulls, undefined and other 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        "Undef: ",
        {
          "attributes": [],
          "children": [],
          "element": "span",
        },
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "Null: ",
        {
          "attributes": [],
          "children": [],
          "element": "span",
        },
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "True: ",
        {
          "attributes": [],
          "children": [],
          "element": "span",
        },
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "False: ",
        {
          "attributes": [],
          "children": [],
          "element": "span",
        },
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "Str: ",
        {
          "attributes": [],
          "children": [
            "Hello World",
          ],
          "element": "span",
        },
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "Num: ",
        {
          "attributes": [],
          "children": [
            "1234",
          ],
          "element": "span",
        },
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "Arr: ",
        {
          "attributes": [],
          "children": [
            "hi",
            "423",
          ],
          "element": "span",
        },
      ],
      "element": "div",
    },
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly handle components returning nulls, undefined and other types 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        "Undef: ",
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "Null: ",
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "True: ",
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "False: ",
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "Str: ",
        "Hello World",
      ],
      "element": "div",
    },
    {
      "attributes": [],
      "children": [
        "Num: ",
        1234,
      ],
      "element": "div",
    },
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly parse async components 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "charset",
              "utf-8",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "http-equiv",
              "x-ua-compatible",
            ],
            [
              "content",
              "IE=edge",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [],
          "children": [
            "Page Title",
          ],
          "element": "title",
        },
        {
          "attributes": [
            [
              "name",
              "viewport",
            ],
            [
              "content",
              "width=device-width, initial-scale=1",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "rel",
              "stylesheet",
            ],
            [
              "type",
              "text/css",
            ],
            [
              "media",
              "screen",
            ],
            [
              "href",
              "main.css",
            ],
          ],
          "children": [],
          "element": "link",
        },
      ],
      "element": "head",
    },
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "class",
              "main-container",
            ],
          ],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "Async title",
                  ],
                  "element": "h2",
                },
                {
                  "attributes": [
                    [
                      "value",
                      "write here",
                    ],
                  ],
                  "children": [],
                  "element": "input",
                },
                {
                  "attributes": [
                    [
                      "style",
                      undefined,
                    ],
                  ],
                  "children": [
                    "Submit",
                  ],
                  "element": "button",
                },
              ],
              "element": "",
            },
          ],
          "element": "div",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should correctly perform sub renders > async render > rendered component can access the context defined on the parent 1`] = `
{
  "attributes": [
    [
      "class",
      "main",
    ],
  ],
  "children": [
    {
      "attributes": [],
      "children": [
        "{"element":"div","attributes":[],"children":["async foo"]}",
        "{"element":"div","attributes":[],"children":["async foo"]}",
        "{"element":"div","attributes":[],"children":["async bar"]}",
      ],
      "element": "div",
    },
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly perform sub renders > async render > renders a simple component 1`] = `
{
  "attributes": [],
  "children": [
    "{"element":"div","attributes":[],"children":["Hello World!"]}",
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly perform sub renders > sync render > rendered computer can access the context defined on the parent 1`] = `
{
  "attributes": [
    [
      "class",
      "main",
    ],
  ],
  "children": [
    {
      "attributes": [],
      "children": [
        "{"element":"div","attributes":[],"children":["foo"]}",
        "{"element":"div","attributes":[],"children":["foo"]}",
        "{"element":"div","attributes":[],"children":["bar"]}",
      ],
      "element": "div",
    },
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly perform sub renders > sync render > renders a simple component 1`] = `
{
  "attributes": [],
  "children": [
    "{"element":"div","attributes":[],"children":["Hello World!"]}",
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly render jsx with arrays in between elements 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        "Header",
      ],
      "element": "h1",
    },
    {
      "attributes": [],
      "children": [
        "0",
      ],
      "element": "p",
    },
    {
      "attributes": [],
      "children": [
        "1",
      ],
      "element": "p",
    },
    {
      "attributes": [],
      "children": [],
      "element": "footer",
    },
  ],
  "element": "div",
}
`;

exports[`renderToJson > should correctly render objects implementing toHtmlTag symbol interface 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            "John Doe",
          ],
          "element": "span",
        },
      ],
      "element": "div",
    },
  ],
  "element": "div",
}
`;

exports[`renderToJson > should properly handle context data > Provider and Consumer 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "id",
              "root",
            ],
          ],
          "children": [
            {
              "attributes": [
                [
                  "id",
                  "1",
                ],
                [
                  "class",
                  "foo",
                ],
              ],
              "children": [
                "no value",
              ],
              "element": "div",
            },
            {
              "attributes": [
                [
                  "id",
                  "span-1",
                ],
              ],
              "children": [
                "no value",
              ],
              "element": "span",
            },
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [
                    [
                      "id",
                      "2",
                    ],
                    [
                      "class",
                      "foo",
                    ],
                  ],
                  "children": [
                    "FOO",
                  ],
                  "element": "div",
                },
                {
                  "attributes": [
                    [
                      "id",
                      "span-2",
                    ],
                  ],
                  "children": [
                    "FOO",
                  ],
                  "element": "span",
                },
                {
                  "attributes": [],
                  "children": [
                    {
                      "attributes": [
                        [
                          "id",
                          "3",
                        ],
                        [
                          "class",
                          "foo",
                        ],
                      ],
                      "children": [
                        "BAR",
                      ],
                      "element": "div",
                    },
                    {
                      "attributes": [
                        [
                          "id",
                          "span-3",
                        ],
                      ],
                      "children": [
                        "BAR",
                      ],
                      "element": "span",
                    },
                  ],
                  "element": "",
                },
              ],
              "element": "",
            },
          ],
          "element": "div",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > close-by providers should not interfere with each other 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "bar",
                  ],
                  "element": "p",
                },
              ],
              "element": "",
            },
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "baz",
                  ],
                  "element": "p",
                },
              ],
              "element": "",
            },
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "qux",
                  ],
                  "element": "p",
                },
              ],
              "element": "",
            },
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "coorg",
                  ],
                  "element": "p",
                },
              ],
              "element": "",
            },
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "fred",
                  ],
                  "element": "p",
                },
              ],
              "element": "",
            },
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "thud",
                  ],
                  "element": "p",
                },
              ],
              "element": "",
            },
            {
              "attributes": [],
              "children": [
                "foo",
              ],
              "element": "p",
            },
          ],
          "element": "",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > correctly handles encapsulated providers 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "id",
              "root",
            ],
          ],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [
                    [
                      "class",
                      "template for-magic",
                    ],
                  ],
                  "children": [
                    {
                      "attributes": [],
                      "children": [
                        {
                          "attributes": [],
                          "children": [
                            {
                              "attributes": [
                                [
                                  "type",
                                  "text",
                                ],
                                [
                                  "name",
                                  "repeating_magic_dwarf",
                                ],
                              ],
                              "children": [],
                              "element": "input",
                            },
                          ],
                          "element": "",
                        },
                      ],
                      "element": "div",
                    },
                  ],
                  "element": "div",
                },
              ],
              "element": "",
            },
          ],
          "element": "div",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > should correctly drill the prop data through multiple components 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    {
                      "attributes": [],
                      "children": [
                        {
                          "attributes": [],
                          "children": [
                            {
                              "attributes": [],
                              "children": [
                                {
                                  "attributes": [],
                                  "children": [
                                    {
                                      "attributes": [],
                                      "children": [
                                        {
                                          "attributes": [],
                                          "children": [
                                            {
                                              "attributes": [],
                                              "children": [
                                                "foo",
                                              ],
                                              "element": "p",
                                            },
                                          ],
                                          "element": "div",
                                        },
                                      ],
                                      "element": "div",
                                    },
                                  ],
                                  "element": "div",
                                },
                              ],
                              "element": "div",
                            },
                          ],
                          "element": "div",
                        },
                      ],
                      "element": "div",
                    },
                  ],
                  "element": "div",
                },
              ],
              "element": "div",
            },
          ],
          "element": "",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > should correctly handle provider pattern 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "charset",
              "utf-8",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "http-equiv",
              "x-ua-compatible",
            ],
            [
              "content",
              "IE=edge",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [],
          "children": [
            "Page Title",
          ],
          "element": "title",
        },
        {
          "attributes": [
            [
              "name",
              "viewport",
            ],
            [
              "content",
              "width=device-width, initial-scale=1",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "rel",
              "stylesheet",
            ],
            [
              "type",
              "text/css",
            ],
            [
              "media",
              "screen",
            ],
            [
              "href",
              "main.css",
            ],
          ],
          "children": [],
          "element": "link",
        },
      ],
      "element": "head",
    },
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            {
              "attributes": [
                [
                  "class",
                  "main-container",
                ],
              ],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    {
                      "attributes": [],
                      "children": [
                        "Provided title",
                      ],
                      "element": "h1",
                    },
                  ],
                  "element": "div",
                },
              ],
              "element": "div",
            },
          ],
          "element": "body",
        },
      ],
      "element": "",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > should correctly override existing context data 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "charset",
              "utf-8",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "http-equiv",
              "x-ua-compatible",
            ],
            [
              "content",
              "IE=edge",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [],
          "children": [
            "Page Title",
          ],
          "element": "title",
        },
        {
          "attributes": [
            [
              "name",
              "viewport",
            ],
            [
              "content",
              "width=device-width, initial-scale=1",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "rel",
              "stylesheet",
            ],
            [
              "type",
              "text/css",
            ],
            [
              "media",
              "screen",
            ],
            [
              "href",
              "main.css",
            ],
          ],
          "children": [],
          "element": "link",
        },
      ],
      "element": "head",
    },
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            {
              "attributes": [],
              "children": [
                "This title was overridden",
              ],
              "element": "h1",
            },
            {
              "attributes": [
                [
                  "placeholder",
                  "write here",
                ],
              ],
              "children": [],
              "element": "input",
            },
          ],
          "element": "",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > should correctly render jsx with context data 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "charset",
              "utf-8",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "http-equiv",
              "x-ua-compatible",
            ],
            [
              "content",
              "IE=edge",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [],
          "children": [
            "Page Title",
          ],
          "element": "title",
        },
        {
          "attributes": [
            [
              "name",
              "viewport",
            ],
            [
              "content",
              "width=device-width, initial-scale=1",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "rel",
              "stylesheet",
            ],
            [
              "type",
              "text/css",
            ],
            [
              "media",
              "screen",
            ],
            [
              "href",
              "main.css",
            ],
          ],
          "children": [],
          "element": "link",
        },
      ],
      "element": "head",
    },
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "class",
              "main-container",
            ],
          ],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "This title is set via the context",
                  ],
                  "element": "h1",
                },
              ],
              "element": "div",
            },
          ],
          "element": "div",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > should correctly render jsx with context data and arrays in between elements 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "charset",
              "utf-8",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "http-equiv",
              "x-ua-compatible",
            ],
            [
              "content",
              "IE=edge",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [],
          "children": [
            "Page Title",
          ],
          "element": "title",
        },
        {
          "attributes": [
            [
              "name",
              "viewport",
            ],
            [
              "content",
              "width=device-width, initial-scale=1",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "rel",
              "stylesheet",
            ],
            [
              "type",
              "text/css",
            ],
            [
              "media",
              "screen",
            ],
            [
              "href",
              "main.css",
            ],
          ],
          "children": [],
          "element": "link",
        },
      ],
      "element": "head",
    },
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "This title is set via the context",
                  ],
                  "element": "h1",
                },
              ],
              "element": "div",
            },
            {
              "attributes": [
                [
                  "placeholder",
                  "write here",
                ],
              ],
              "children": [],
              "element": "input",
            },
            {
              "attributes": [],
              "children": [
                "Submit",
              ],
              "element": "button",
            },
          ],
          "element": "",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;

exports[`renderToJson > should properly handle context data > should correctly render jsx with context data and async components 1`] = `
{
  "attributes": [],
  "children": [
    {
      "attributes": [],
      "children": [
        {
          "attributes": [
            [
              "charset",
              "utf-8",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "http-equiv",
              "x-ua-compatible",
            ],
            [
              "content",
              "IE=edge",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [],
          "children": [
            "Page Title",
          ],
          "element": "title",
        },
        {
          "attributes": [
            [
              "name",
              "viewport",
            ],
            [
              "content",
              "width=device-width, initial-scale=1",
            ],
          ],
          "children": [],
          "element": "meta",
        },
        {
          "attributes": [
            [
              "rel",
              "stylesheet",
            ],
            [
              "type",
              "text/css",
            ],
            [
              "media",
              "screen",
            ],
            [
              "href",
              "main.css",
            ],
          ],
          "children": [],
          "element": "link",
        },
      ],
      "element": "head",
    },
    {
      "attributes": [],
      "children": [
        {
          "attributes": [],
          "children": [
            {
              "attributes": [],
              "children": [
                {
                  "attributes": [],
                  "children": [
                    "This title is set via the context",
                  ],
                  "element": "h1",
                },
              ],
              "element": "div",
            },
            {
              "attributes": [
                [
                  "placeholder",
                  "write here",
                ],
              ],
              "children": [],
              "element": "input",
            },
            {
              "attributes": [],
              "children": [
                "Submit",
              ],
              "element": "button",
            },
          ],
          "element": "",
        },
      ],
      "element": "body",
    },
  ],
  "element": "html",
}
`;
